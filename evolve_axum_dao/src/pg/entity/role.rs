//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "role")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub name: String,
    pub description: Option<String>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: Option<DateTimeWithTimeZone>,
    pub deleted_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::permission_role_map::Entity")]
    PermissionRoleMap,
    #[sea_orm(has_many = "super::user_role_map::Entity")]
    UserRoleMap,
}

impl Related<super::permission_role_map::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PermissionRoleMap.def()
    }
}

impl Related<super::user_role_map::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserRoleMap.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
