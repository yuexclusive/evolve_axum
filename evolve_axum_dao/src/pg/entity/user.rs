//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use super::sea_orm_active_enums::Userstatus;
use super::sea_orm_active_enums::Usertype;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub email: String,
    pub salt: String,
    pub pwd: Option<String>,
    pub name: Option<String>,
    pub mobile: Option<String>,
    pub laston: Option<DateTimeWithTimeZone>,
    pub avatar: Option<String>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: Option<DateTimeWithTimeZone>,
    pub deleted_at: Option<DateTimeWithTimeZone>,
    pub r#type: Usertype,
    pub status: Userstatus,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::user_role_map::Entity")]
    UserRoleMap,
}

impl Related<super::user_role_map::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserRoleMap.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
