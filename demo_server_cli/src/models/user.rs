/*
 * demo_server_main
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "laston", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub laston: Option<Option<String>>,
    #[serde(rename = "mobile", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub mobile: Option<Option<String>>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "status")]
    pub status: models::UserStatus,
    #[serde(rename = "type")]
    pub r#type: models::UserType,
    #[serde(rename = "updated_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<Option<String>>,
}

impl User {
    pub fn new(created_at: String, email: String, id: i64, status: models::UserStatus, r#type: models::UserType) -> User {
        User {
            created_at,
            email,
            id,
            laston: None,
            mobile: None,
            name: None,
            status,
            r#type,
            updated_at: None,
        }
    }
}

